@model PagedList.IPagedList<T1809E_Project_Sem3.Models.User>
@using PagedList.Mvc
@using T1809E_Project_Sem3.Models
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared_Admin/_Layout.cshtml";
    var Iconsort = ViewBag.SortIcon;
    var STT = 0;
}

<style>
    .padding {
        padding-top: 10px;
        padding-bottom: 10px;
    }
</style>
<div class="wrapper">
    <div class="row">
        <div class="col-sm-12">
            <section class="panel">
                <header class="panel-heading">
                    Users Table
                    
                </header>
                @*Search*@
            
            <div class="panel-body">
                <div class="btn-group" style="margin-bottom: 1%">
                    <a href="@Url.Action("Create","Users")" class="btn btn-primary">
                        Create New &nbsp;
                        <i class="fa fa-plus"></i>
                    </a>

                </div>
                @using (Html.BeginForm("Index", "Users", FormMethod.Get, new { @name = "search-form" }))
                {

                    <input type="hidden" name="start" value="" />
                    <input type="hidden" name="end" value="" />
                    <input type="hidden" name="sortOrder" value="" />

                    <div class="row">
                        <div class="col-lg-4 col-md-5">
                            <p class="padding">
                                Search By Keyword
                            </p>
                            <div class="input-group m-bot15">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="submit" style="height:34px"> Search <i class="fa fa-search"></i></button>

                                </span>
                                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Name. . . " })

                            </div>
                        </div>

                        <div class="col-lg-2 col-md-12">
                            <p class="padding">
                                Search By Status
                            </p>
                            @Html.DropDownList("status",
                                EnumHelper.GetSelectList(typeof(User.UserStatus)),
                                " Select Status ",
                                new { @class = "btn btn-default dropdown-toggle" })
                        </div>

                        <div class="col-lg-3 col-md-12">
                            <p class="padding">
                                Search By Gender
                            </p>
                            @Html.DropDownList("gender",
                       EnumHelper.GetSelectList(typeof(User.GenderEnum)),
                       "Select Gender",
                       new { @class = "btn btn-default dropdown-toggle" })
                        </div>
                        <div class="col-lg-3 col-md-10">
                            <div class="pull-left">
                                <p class="padding">
                                    Search By Time
                                </p>
                                <input type="text" name="daterange" value="" class="form-control fa fa-clock-o" />
                            </div>
                        </div>
                    </div>

                }


                

                @if (Model.Count == 0)
                {
                    <div style="font-style:italic ; text-align:center ; font-size: 1.2em;" class="padding">
                        (NO RESULT IS FOUND)
                    </div>
                }
                <div class="padding">

                </div>
                <table class="display table table-bordered table-striped " id="dynamic-table">
                    <tr>
                        <th>
                            STT
                        </th>
                        <th>
                            @Html.ActionLink("User Name", "Index", new { sortOrder = ViewBag.NameSortParm })
                            <i class="@Iconsort" aria-hidden="true"></i>
                        </th>

                        <th>
                            @Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.EmailSortParm })
                            <i class="@Iconsort" aria-hidden="true"></i>
                        </th>
                        <th>
                            Status
                        </th>
                        <th>
                            Gender
                        </th>
                        <th>
                            @Html.ActionLink("Create At", "Index", new { sortOrder = ViewBag.DateSortParm })
                            <i class="@Iconsort " aria-hidden="true"></i>
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>


                    @foreach (var item in Model)
                    {

                        <tr>
                            <td>
                                @{
                                    STT = STT + 1;
                                }
                                @STT
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Gender)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreateAt)
                            </td>

                            <td>
                                <a href="@Url.Action("Edit", "Users", new { id = item.Id })" class="btn btn-sm btn-light" style="background-color:lightblue"><i class="fa fa-pencil"></i></a> |
                                <a href="@Url.Action("Details", "Users", new { id = item.Id })" class="btn btn-sm btn-light" style="background-color:lightgreen"><i class="fa fa-info-circle"></i></a> 
                            </td>
                        </tr>
                    }

                </table>

                <br />
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager(Model, page => Url.Action("Index",
                    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, status = ViewBag.Status, gender = ViewBag.Gender }))
            </div>
            </section>
        </div>
    </div>

</div>
@section scripts{
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <script>
        var start = moment().subtract(29, 'days');
        var end = moment();

        var url_string = location.href;
        var url = new URL(url_string);

        // Cắt đoạn biến trong herf
        var initStart = url.searchParams.get("start");
        var initEnd = url.searchParams.get("end");
        var keyword = url.searchParams.get("keyword");
        var sortOrder = url.searchParams.get("sortOrder");


        if (initStart != null && moment(initStart, 'YYYY-MM-DD', true).isValid()) {
            // Gán biến cho start trong thẻ input
            start = initStart;
            $('input[name="start"]').val(start);
        }
        if (initEnd != null && moment(initEnd, 'YYYY-MM-DD', true).isValid()) {
            end = initEnd;
            $('input[name="end"]').val(end);
        }
        if (sortOrder != null) {
            $('input[name="sortOrder"]').val(keyword);
        }
        $('input[name="daterange"]').daterangepicker({
            startDate: start,
            endDate: end,
            locale: {
                format: 'YYYY-MM-DD'
            },
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [
                    moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')
                ]
            }
        });
        $('input[name="daterange"]').on('apply.daterangepicker',
            function (ev, picker) {
                var startDate = picker.startDate.format('YYYY-MM-DD');
                var endDate = picker.endDate.format('YYYY-MM-DD');
                $('input[name="start"]').val(startDate);
                $('input[name="end"]').val(endDate);
                $('form[name="search-form"]').submit();
            });

        $('select[name="status"]').change(function () {
            $('form[name="search-form"]').submit();
        });

        $('select[name="gender"]').change(function () {
            $('form[name="search-form"]').submit();
        });
    </script>
}
