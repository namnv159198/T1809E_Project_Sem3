@model PagedList.IPagedList<T1809E_Project_Sem3.Models.UserCustomerViewModel>
@using T1809E_Project_Sem3.Models
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared_Admin/_Layout.cshtml";
    var Iconsort = ViewBag.SortIcon;
}
<style>

    .padding {
        padding-top: 15px;
        padding-bottom: 8px;
    }
</style>
<h2>Index</h2>
<div class="wrapper">
    <div class="row">
        <div class="col-sm-12">
            <section class="panel">
                <header class="panel-heading">
                    Product Table

                </header>
                <div class="panel-body">
                    <div class="btn-group" style="margin-bottom: 1%">
                        <a href="@Url.Action("Create","Customers")" class="btn btn-primary">
                            Create New &nbsp;
                            <i class="fa fa-plus"></i>
                        </a>
                    </div>
                    @using (Html.BeginForm("Index", "Customers", FormMethod.Get, new { @name = "search-form" }))
                    {
                        <input type="hidden" name="sortOrder" value="" />

                        <div class="row">
                            <div class="col-lg-3 col-md-5">
                                <p class="padding">
                                    Search By Keyword
                                </p>
                                <div class="input-group m-bot15">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="submit" style="height:34px"> Search <i class="fa fa-search"></i></button>
                                    </span>
                                    @Html.TextBox("SearchStringName", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Name. . . " })
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-5">
                                <p class="padding">
                                    Search By Email
                                </p>
                                <div class="input-group m-bot15">
                                    @Html.TextBox("SearchStringEmail", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Email. . . " })
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-5">
                                <p class="padding">
                                    Search By Address
                                </p>
                                <div class="input-group m-bot15">
                                    @Html.TextBox("SearchStringAddress", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Address. . . " })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-md-12">
                                <p class="padding">
                                    Search By Gender
                                </p>
                                @Html.DropDownList("gender",
                             EnumHelper.GetSelectList(typeof(T1809E_Project_Sem3.Models.UserCustomerViewModel.EnumGender)),
                             "Select Gender",
                             new { @class = "btn btn-default" })
                            </div>
                            <div class="col-lg-3 col-md-12">
                                <p class="padding">
                                    Search By Customer Type
                                </p>
                                @Html.DropDownList("customer_type",
                             EnumHelper.GetSelectList(typeof(T1809E_Project_Sem3.Models.UserCustomerViewModel.EnumCustomer_Type)),
                             "Select Type",
                             new { @class = "btn btn-default" })
                            </div>
                            <div class="col-lg-3 col-md-12">
                                <p class="padding">
                                    Search By Status
                                </p>
                                @Html.DropDownList("status",
                             EnumHelper.GetSelectList(typeof(T1809E_Project_Sem3.Models.UserCustomerViewModel.EnumStatus)),
                             "Select Status",
                             new { @class = "btn btn-default" })
                            </div>
                        </div>
                    }
                    @if (Model.Count() == 0)
                    {
                        <div style="font-style:italic ; text-align:center ; font-size: 1.2em;" class="padding">
                            (NO RESULT IS FOUND)
                        </div>
                    }
                    <div class="adv-table padding row mt-lg-3">
                        <table class="display table table-bordered table-striped col-md-11">
                            <tr>
                                <th>

                                    @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSort })
                                    <i class="@Iconsort" aria-hidden="true"></i>

                                </th>
                                <th>
                                    Email
                                </th>
                                <th>
                                    Address
                                </th>
                                <th>
                                    Gender
                                </th>
                                <th>
                                    @Html.ActionLink("Created At", "Index", new { sortOrder = ViewBag.DateSort })
                                    <i class="@Iconsort" aria-hidden="true"></i>
                                </th>
                                <th>
              <th>
                                    Customer Type

                      @Html.DisplayNameFor(model => model.Customer_Type)

                                </th>
                                <th>
                                    Status
                                </th>

                                <th></th>
                            </tr>

                            @foreach (var item in Model)
                            {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Address)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Gender)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedAt)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Customer_Type)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>

                            <td>
                                <a href="@Url.Action("Edit", "Customers", new { id = item.Id })" class="btn btn-sm btn-light" style="background-color:lightblue"><i class="fa fa-pencil"></i></a> |
                                <a href="@Url.Action("Details", "Customers", new { id = item.Id })" class="btn btn-sm btn-light" style="background-color:lightgreen"><i class="fa fa-info-circle"></i></a>  |

                                <button type="button" class="btn btn-sm btn-danger  " data-toggle="modal" data-target="#myModal_@item.Id">
                                    <i class="fa fa-trash"></i>
                                </button>


                                <div class="modal" id="myModal_@item.Id">
                                    <div class="modal-dialog">
                                        <div class="modal-content">

                                            <!-- Modal Header -->
                                            <div class="modal-header">
                                                <h4 class="modal-title">Message</h4>

                                            </div>

                                            <!-- Modal body -->
                                            <div class="modal-body">
                                                <span>Are your sure delete</span> <span class="text-uppercase" style="text-decoration: underline; font-weight: bold">@item.UserName </span> ?
                                            </div>

                                            <!-- Modal footer -->
                                            <div class="modal-footer">
                                                <!-- Cỏntroller -->
                                                @using (Html.BeginForm("Delete", "Customers", new { id = item.Id }))
                                                {
                                                    @Html.AntiForgeryToken()
                                                    <input type="submit" value="Delete" class="btn btn-default btn-danger" />
                                                    <input type="button" class=" btn btn-default " data-dismiss="modal" value="Cancel" />
                                                }


                                            </div>

                                        </div>





                                    </div>
                                </div>
                            </td>
                        </tr>
                            }

                        </table>
                    </div>
                    <br />
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount


                    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, status = ViewBag.Status }))
                </div>
            </section>
        </div>
    </div>
</div>
@section scripts{
    <script type="text/javascript">

        $('select[name="customer_type"]').change(function () {
            $('form[name="search-form"]').submit();
        });
        $('select[name="gender"]').change(function () {
            $('form[name="search-form"]').submit();
        });
        $('select[name="status"]').change(function () {
            $('form[name="search-form"]').submit();
        });
    </script>
}
@{ if ((string)TempData["message"] == "Create")
    {
        <script type="text/javascript">
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Created',
                showConfirmButton: false,
                timer: 1500
            })
        </script>
    }
    else if ((string)TempData["message"] == "Edit")
    {
        <script type="text/javascript">
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Edited',
                showConfirmButton: false,
                timer: 1500
            })
        </script>
    }
    else if ((string)TempData["message"] == "Fail")
    {
        <script type="text/javascript">
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!'
            })
        </script>
    }
    else if ((string)TempData["message"] == "Delete")
    {
        <script type="text/javascript">
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Deleted',
                showConfirmButton: false,
                timer: 1500
            })
        </script>
    }
}
